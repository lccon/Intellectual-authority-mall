<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.mapper.UserMapper">
  <resultMap id="userMap" type="com.mall.domain.User">
    <id property="id" column="id"/>
    <result property="username" column="user_name"/>
    <result property="password" column="pass_word"/>
    <result property="identity" column="identity"/>
    <result property="mobile" column="mobile"/>
    <result property="idCard" column="id_card"/>
    <result property="headPortrait" column="head_portrait"/>
    <result property="authorizeType" column="authorize_type" />
    <result property="accountYue" column="account_yue" />
    <result property="virtualCoin" column="virtual_coin" />
    <result property="freeMessageNum" column="free_message_num"/>
  </resultMap>

  <sql id="column">
    id, user_name, pass_word, identity, mobile, id_card, head_portrait, authorize_type, account_yue, virtual_coin,
    free_message_num
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="userMap">
    select
    <include refid="column" />
    from user
    where id = #{id}
  </select>

  <insert id="addUser" parameterType="com.mall.domain.User">
    <selectKey keyProperty="id" resultType="java.lang.Long"
               order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    (id, user_name, pass_word, identity, mobile, id_card, head_portrait, authorize_type, account_yue, virtual_coin,
    free_message_num)
    values
    (#{id}, #{username}, #{password}, #{identity}, #{mobile}, #{idCard}, #{headPortrait}, #{authorizeType}, #{accountYue}, #{virtualCoin},
    #{freeMessageNum})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.mall.domain.User">
    update user
    <set>
      <if test="username != null and username != ''">
        user_name = #{username},
      </if>
      <if test="password != null and password != ''">
        pass_word = #{password},
      </if>
      <if test="identity != null">
        identity = #{identity},
      </if>
      <if test="mobile != null and mobile != ''">
        mobile = #{mobile},
      </if>
      <if test="idCard != null and idCard != ''">
        id_card = #{idCard},
      </if>
      <if test="headPortrait != null and headPortrait != ''">
        head_portrait = #{headPortrait},
      </if>
      <if test="authorizeType != null">
        authorize_type = #{authorizeType},
      </if>
      <if test="accountYue != null">
        account_yue = #{accountYue},
      </if>
      <if test="virtualCoin != null">
        virtual_coin = #{virtualCoin},
      </if>
      <if test="freeMessageNum != null">
        free_message_num = #{freeMessageNum},
      </if>
    </set>
    where id = #{id}
  </update>

  <select id="getUserByUsernamePassword" resultMap="userMap">
    SELECT
    <include refid="column"/>
    from user
    WHERE user_name = #{username}
    and pass_word = #{password}
  </select>

  <select id="getUserByMobilePassword" resultMap="userMap">
    SELECT
    <include refid="column"/>
    from user
    WHERE mobile = #{mobile}
    and pass_word = #{password}
  </select>

  <select id="findUserForList" parameterType="com.mall.vo.UserVO" resultMap="userMap">
    SELECT
    <include refid="column"/>
    FROM user
    <where>
      <if test="identity != null">
        identity = #{identity}
      </if>
    </where>
  </select>

  <delete id="deleteUser">
    DELETE FROM user
    WHERE id IN
    <foreach collection="array" index="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

  <update id="updatePassword" parameterType="com.mall.domain.User">
    update user set pass_word = #{password} where mobile = #{mobile}
  </update>

</mapper>